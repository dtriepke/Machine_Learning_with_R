{
    "collab_server" : "",
    "contents" : "#=================================================================\n# Autor: Dennis Triepke, Jan Grohn, Oliver Tebeck, Tanja Münstedt\n# Datum: 28.11.2016\n# purpose: Launcher to run the k-mean Algorithm \n#=================================================================\n\n\n\n# Local Initialisation ===================================\npathImp <- \"ImportData/\"\n\n\n# load functions =========================================\nsource(\"01_Support_Functions.R\")\n\n\n\n# Analysis of car data with k mean =======================\n\n# 1. Import car data-----------------------------------------\nfilename <- \"car.data\"\ndata <- read.csv(paste0(pathImp,filename), header = FALSE, sep = \",\")\ncolnames(data) <- c(\"buying\", \"maint\", \"doors\", \"persons\", \"low_boot\", \"safety\", \"class_values\")\n# The car data has categorical variables. However, k-means only works for continious variables,\n# Therefore we have to change the factors to numbers.\ndata= within(data,{\n  buying=ordered(buying,levels=c(\"low\",\"med\",\"high\",\"vhigh\"),labels=c(1,2,3,4))\n  maint=ordered(maint,levels=c(\"low\",\"med\",\"high\",\"vhigh\"),labels=c(1,2,3,4))\n  doors=ordered(doors,levels=c(\"2\",\"3\",\"4\",\"5more\"),labels=c(2,3,4,5))\n  persons=ordered(persons,levels=c(\"2\",\"4\",\"more\"),labels=c(2,4,6))\n  low_boot=ordered(low_boot,levels=c(\"small\",\"med\",\"big\"),labels=c(1,2,3))\n  safety=ordered(safety,levels=c(\"low\",\"med\",\"high\"),labels=c(1,2,3))\n})\ndata[1:6] <- lapply(data[1:6], function(x) as.numeric(as.character(x)))\n\n\n# 2. Apply the k_mean algorithm to detect the mean---------\n# The last column of the car data \"class_values\" has been excluded during the cluster building, \n# because this is the real class we actually don't now but we need later for the validation how good we classified.\n# The output from the function is a vector with the length of the input dataframe which includes the cluster informations.\n# Therefore we add the output directly as a column on the car data.\n# The Cluster size is set to  4.\ndata$cluster <- k_means(data[1:6], 4)\n\n\n# 3. Error rate just for car data-------------------------\n# The error rate can be calculated when the real cluster value (class value) is known. If the the values are known, \n# it is no longer a unsupervised learning like k mean. Therefore is the error rate claculation seperatly \n# done rather than in the k_mean function included.\n\n# pre-proseccings: empty variables for clac purpose\ncluster_elements = vector(mode=\"list\", length = 4)\ncluster_decision = vector( length = 4)\nerror_rate = 0\n\nfor (j in 1:4) {\n  # Assume that all objects of a cluster will be classiﬁed with the same class. \n  # This class is the majority class of the training examples of that cluster.\n  # An error is difinded where there are elements in an cluster which is not a decision cluster.\n  cluster_elements[[j]] = sort(table(data[data$cluster == j, \"class_values\"]), decreasing = TRUE)\n  cluster_decision[[j]] = names(sort(table(data[data$cluster == j, \"class_values\"]), decreasing = TRUE)[1])\n  error_rate = error_rate + sum( cluster_elements[[j]][ names(cluster_elements[[j]]) != cluster_decision[[j]] ] )  \n}\n\nerror_rate = error_rate / nrow(data)\nprint(error_rate)\n\n\n\n\n\n\n",
    "created" : 1481492379448.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3627824539",
    "id" : "CCDE29DB",
    "lastKnownWriteTime" : 1481492394,
    "last_content_update" : 1481492394490,
    "path" : "C:/Users/dtrie/Dropbox/Master - Statistik/Maschine Learning/Assignment/Programming Assignment/k_Mean/00_R_Code/00_Launcher.R",
    "project_path" : "00_Launcher.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}