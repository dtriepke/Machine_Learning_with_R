{
    "collab_server" : "",
    "contents" : "#================================================================\n# Autor: Dennis Triepke, Jan Grohn, Oliver Tebeck, Tanja M?nstedt\n# Datum: 22.11.2016\n# purpose: naive Bayes for classification\n#===============================================================\n\n\n# Init ======================================================\nsource(\"01_Support_Functions.R\")\n\n\n# Input data ================================================\n\nfilename <- \"car.data\"\ndata <- read.csv2(paste0(\"ImportData/\", filename), header = FALSE, sep = \",\", \n                  colClasses = rep(\"character\", 7) )\ncolnames(data) <- c(\"buying\", \"maint\", \"doors\", \"persons\", \"low_boot\", \"safety\", \"class_values\")\n\n\n\n#----------------------------------------------------------------------\n# 1) estimate for each instances in the test data the class and compute \n# the error rate of the classiﬁe\n#----------------------------------------------------------------------\n\n# split data in training and test data\nset.seed(1807)\ntrain <- sample(1:nrow(data), nrow(data) * 2/3 , replace = FALSE)\ntest <- -train\n\ndata_test <- data[test,]\ndata_train <- data[train,]\n\n\n# select each row of the test data frame and estimate for each row based on the training data \n# the class with the naiveBayes function\n\ndata_test$estimated.class_values <- 0 # add new column for store the estimated class\n\nfor (j in row.names(data_test)){\n  # data pre-processing: \n  \n  # select the attribute columns (not the class columns)\n  instances_j <- data_test[j, !(colnames(data_test) %in% c(\"class_values\",\"estimated.class_values\")) ]\n  instances_j <- as.character(instances_j) # test data needs to be a vector \n  \n  # run the naive Bayes function in order to estimate the class value and store the result in a \n  # new column in the test data frame\n  data_test[j, \"estimated.class_values\"] <-  naiveBayes( training_data = data_train , new_data = instances_j) \n}\n\n# error rate\nmean(data_test$class_values != data_test$estimated.class_values)\n# 0.1388889\n\n# confusion matrix\n(confusion_matrix <- xtabs(~ class_values + estimated.class_values, data_test) )\n\n\n\n#------------------------------------------------------------------------------------\n# 2) Determine the mean error rate over 100 diﬀerent random samples of training data. \n#------------------------------------------------------------------------------------\n\n# To compute 100 error rate simplie run the code in 1) 100 times without the set.seed() argument\n# in the loop but run both (loop and set.seed) if you wish to have the same result for the \n# mean error rate.\n\n\n# First an empty vector for storing the 100 single error rates\nerror_rates <- rep(0,100)\n\n# before running the loop below: take care it takes a long time\nset.seed(1807); for (k in 1:100){\n  \n  # split data in training and test data\n  #set.seed(1807)\n  train <- sample(1:nrow(data), nrow(data) * 2/3 , replace = FALSE)\n  test <- -train\n  \n  data_test <- data[test,]\n  data_train <- data[train,]\n  \n  \n  # select each row of the test data frame and estimate for each row based on the training data \n  # the class with the naiveBayes function\n  \n  data_test$estimated.class_values <- 0 # add new column for store the estimated class\n  \n  for (j in row.names(data_test)){\n    # data pre-processing: \n    \n    # select the attribute columns (not the class columns)\n    instances_j <- data_test[j, !(colnames(data_test) %in% c(\"class_values\",\"estimated.class_values\")) ]\n    instances_j <- as.character(instances_j) # test data needs to be a vector \n    \n    # run the naive Bayes function in order to estimate the class value and store the result in a \n    # new column in the test data frame\n    data_test[j, \"estimated.class_values\"] <-  naiveBayes( training_data = data_train , new_data = instances_j) \n  }\n  \n  # error rate \n  error_rates[k] <- sum( ( data_test[,\"class_values\"] != data_test[, \"estimated.class_values\"] )*1 ) / nrow(data_test)\n  \n}\n\n# mean error rate\nmean(error_rates)\n# 0.1538889\n\n\n",
    "created" : 1489278969538.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1111374965",
    "id" : "E1D2A9ED",
    "lastKnownWriteTime" : 1483901782,
    "last_content_update" : 1483901782,
    "path" : "C:/Users/dtrie/Dropbox/Master - Statistik/Machine Learning/Assignment/Programming Assignment/Naive_Bayes/00_R_Code/00_Launcher.R",
    "project_path" : "00_Launcher.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}